---
- name: Configure sudo users with SSH keys and require password change on first login
  hosts: simon
  become: true
  vars:
    users:
      - username: simon
        ssh_keys:
             - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC3RPU3PDHb3vG8CNv4+GSF9YFek84NzguUpUIJAWs5pGk9Uio1PQIT6gRSSVjVciFtFPfG55zAcTo6gjj0HUJ3Y5YQ8uwFUrSr7i0nA/Ys+fKF+W7IpXqB/TP2YZ2Y09NEy/SdvJADx1co9ahLrIL+aUIlmAlKgrHxV99cEHg0x41LskMTmf64aPJB46s9WyIOEnJGhZ4BkAjZjk1c4bigJJHazscdQtjoBUoOsZN30aR9tI4Fm4G4sCsWVo7QzP08qd8t3B3K3eu1LExv98TMZNrHD8tqY5slM9u2j5974pbluKOwQUhHxAKDDhdgF1MT61p2gggpkwjMAsggeIIz+F7ji+Kopp757+tlNTo/c7egCtl4SixU3JwCdxl9Av/npjh8tyJqHmgFKiF6AW5UnIm3HTmivEQpTrZ+wj57F7PGRT98ZwK6E4+RFxj1pzhOCEieFs6WAobLK8R4v4lR7fMcozAZg5qrlCbhr6tTM6S2XPUy+iiVUHnEQJL4ouM= is-dbm@is-dbm.local"
             - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC3RPU3PDHb3vG8CNv4+GSF9YFek84NzguUpUIJAWs5pGk9Uio1PQIT6gRSSVjVciFtFPfG55zAcTo6gjj0HUJ3Y5YQ8uwFUrSr7i0nA/Ys+fKF+W7IpXqB/TP2YZ2Y09NEy/SdvJADx1co9ahLrIL+aUIlmAlKgrHxV99cEHg0x41LskMTmf64aPJB46s9WyIOEnJGhZ4BkAjZjk1c4bigJJHazscdQtjoBUoOsZN30aR9tI4Fm4G4sCsWVo7QzP08qd8t3B3K3eu1LExv98TMZNrHD8tqY5slM9u2j5974pbluKOwQUhHxAKDDhdgF1MT61p2gggpkwjMAsggeIIz+F7ji+Kopp757+tlNTo/c7egCtl4SixU3JwCdxl9Av/npjh8tyJqHmgFKiF6AW5UnIm3HTmivEQpTrZ+wj57F7PGRT98ZwK6E4+RFxj1pzhOCEieFs6WAobLK8R4v4lR7fMcozAZg5qrlCbhr6tTM6S2XPUy+iiVUHnEQJL4ouM= is-dbm@is-dbm.local"
        email: "simon@afrinic.net"
    users_to_remove:
      - hanshala
      - daniel
      - siraj
      - samir

  tasks:
    - name: Install required packages
      package:
        name:
          - sudo
          - openssh-server
          - "{{ 'mailutils' if ansible_facts['os_family'] == 'Debian' else 'mailx' }}"
        state: latest
      register: package_install
      retries: 3
      delay: 5
      until: package_install is success

    - name: Check if users exist and set fact for new users
      command: "getent passwd {{ item.username }}"
      register: user_check
      loop: "{{ users }}"
      changed_when: false
      failed_when: false

    - name: Initialize user_passwords dictionary
      set_fact:
        user_passwords: {}

    - name: Generate passwords for new users
      set_fact:
        user_passwords: "{{ user_passwords | combine({item.item.username: lookup('password', '/dev/null length=15 chars=ascii_letters+digits')}) }}"
      loop: "{{ user_check.results }}"
      when: item.rc != 0

    - name: Create new users with plain-text passwords if they do not exist
      user:
        name: "{{ item.username }}"
        password: "{{ user_passwords[item.username] | default('') | password_hash('sha512') }}"
        groups: sudo
        append: yes
        create_home: yes
        shell: /bin/bash
        update_password: on_create
        expires: -1
      loop: "{{ users }}"
      when: user_passwords[item.username] is defined
      register: user_creation
      failed_when: user_creation is failed

    - name: Set password to expire upon first login for newly created users
      command: chage -d 0 "{{ item.username }}"
      loop: "{{ users }}"
      when: user_passwords[item.username] is defined
      register: chage_result
      failed_when: chage_result is failed

    - name: Update existing users
      user:
        name: "{{ item.username }}"
        groups: sudo
        append: yes
      loop: "{{ users }}"
      when: user_passwords[item.username] is not defined
      register: user_update
      failed_when: user_update is failed

    - name: Deploy SSH public keys for the users
      authorized_key:
        user: "{{ item.0.username }}"
        state: present
        key: "{{ item.1 }}"
      loop: "{{ users | subelements('ssh_keys') }}"
      register: ssh_key_deploy
      failed_when: ssh_key_deploy is failed

    - name: Send password to users via email
      mail:
        host: relay.afrinic.net
        port: 25
        to: "{{ item.email }}"
        subject: "Your new account password"
        body: |
          Dear {{ item.username }},
          Your new account has been created on the following host: {{ ansible_host }}.
          Username: {{ item.username }}
          Password: {{ user_passwords[item.username] }}
          Please change your password upon first login.
          **Note:** This is an automated message generated by Ansible. Please do not reply to this email.
          Best regards,
          Infra Team
        from: ansible@afrinic.net
      loop: "{{ users }}"
      when: user_passwords[item.username] is defined
      register: email_result
      failed_when: email_result is failed
      ignore_errors: yes

    - name: Remove specified users
      user:
        name: "{{ item }}"
        state: absent
        remove: yes
      loop: "{{ users_to_remove }}"
      register: user_removal
      failed_when: user_removal is failed

